defaults:
  - optim: adam
  # Train data is a single dataset configuration. User needs to specify train_data.name
  # manually, e.g. train_data.name=mnist or +data@train_data=mnist.
  # To modify the train dataset, either use train_data.<property>=... or use config
  # groups like '+data@train_data=pixel_backdoor train_data.pixel_backdoor.p_backdoor=0.1'
  - data@train_data:
    - pytorch
    - train
  # Validation data is a dictionary of dataset configurations. By default, there is
  # only a validation dataset, which is the test split of the training dataset.
  # Users can remove it via ~val_data.val or add more datasets e.g. via
  # +data@val_data.backdoor=[mnist, pixel_backdoor, test]
  - data@val_data.val:
    - pytorch
    - test
  - _self_
  - override hydra/launcher: submitit_slurm

# By default, use the test split of the training dataset for validation
val_data:
  val:
    name: ${train_data.name}
    transforms: ${train_data.transforms}
num_epochs: 10
batch_size: 128
max_batch_size: 2048
num_classes: 10
max_steps: null
debug: false
wandb: false

dir:
  log: logs/base
  run: ${now:%Y-%m-%d_%H-%M-%S}
seed: 0
hydra:
  run:
    dir: ${dir.log}/${dir.run}
  sweep:
    dir: ${dir.log}/${dir.run}
    subdir: ${hydra.job.num}
  job:
    chdir: true
  launcher:
    wait_until_finished: true
  callbacks:
    check_output_dir_exists:
      _target_: abstractions.utils.CheckOutputDirExistsCallback
